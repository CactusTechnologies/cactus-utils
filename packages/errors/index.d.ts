/** Declaration file generated by dts-gen */

export class CactusError {
  constructor(...args: any[])

  asResponseError(...args: any[]): void
}

export function ApiError(...args: any[]): void

export function ApiFailError(...args: any[]): void

export function ApiTimeOutError(...args: any[]): void

export function ArgError(...args: any[]): void

export function DatabaseNotFoundError(...args: any[]): void

export function DatabaseRemoveError(...args: any[]): void

export function DatabaseSaveError(...args: any[]): void

export function DatabaseValidationError(...args: any[]): any

export function EmptyArgError(...args: any[]): void

export function EmptyArgumentError(...args: any[]): void

export function FileNotFoundError(...args: any[]): void

export function InternalServerError(...args: any[]): void

export function InvalidArgumentError(...args: any[]): void

export function MissingDependencyError(...args: any[]): void

export function MissingDeviceError(...args: any[]): void

export function NotAuthorizedError(...args: any[]): void

export function NotFoundError(...args: any[]): void

export function NotImplementedError(...args: any[]): void

export namespace ApiError {
  namespace prototype {
    const message: string

    const name: string

    function asResponseError(...args: any[]): void

    function cause(c: any): any

    function toString(): any

    namespace cause {
      const prototype: {}
    }

    namespace toString {
      const prototype: {}
    }
  }
}

export namespace ApiFailError {
  namespace prototype {
    const message: string

    const name: string

    function asResponseError(...args: any[]): void

    function cause(c: any): any

    function toString(): any

    namespace cause {
      const prototype: {}
    }

    namespace toString {
      const prototype: {}
    }
  }
}

export namespace ApiTimeOutError {
  namespace prototype {
    const message: string

    const name: string

    function asResponseError(...args: any[]): void

    function cause(c: any): any

    function toString(): any

    namespace cause {
      const prototype: {}
    }

    namespace toString {
      const prototype: {}
    }
  }
}

export namespace ArgError {
  namespace prototype {
    const message: string

    const name: string

    function asResponseError(...args: any[]): void

    function cause(c: any): any

    function toString(): any

    namespace cause {
      const prototype: {}
    }

    namespace toString {
      const prototype: {}
    }
  }
}

export namespace CactusError {
  //   namespace prototype {
  //     const message: string
  //     const name: string
  //     function asResponseError(...args: any[]): void
  //     function cause(c: any): any
  //     function toString(): any
  //     namespace cause {
  //       const prototype: {}
  //     }
  //     namespace toString {
  //       const prototype: {}
  //     }
  //   }
}

export namespace DatabaseNotFoundError {
  namespace prototype {
    const message: string

    const name: string

    function asResponseError(...args: any[]): void

    function cause(c: any): any

    function toString(): any

    namespace cause {
      const prototype: {}
    }

    namespace toString {
      const prototype: {}
    }
  }
}

export namespace DatabaseRemoveError {
  namespace prototype {
    const message: string

    const name: string

    function asResponseError(...args: any[]): void

    function cause(c: any): any

    function toString(): any

    namespace cause {
      const prototype: {}
    }

    namespace toString {
      const prototype: {}
    }
  }
}

export namespace DatabaseSaveError {
  namespace prototype {
    const message: string

    const name: string

    function asResponseError(...args: any[]): void

    function cause(c: any): any

    function toString(): any

    namespace cause {
      const prototype: {}
    }

    namespace toString {
      const prototype: {}
    }
  }
}

export namespace DatabaseValidationError {
  namespace prototype {
    const message: string

    const name: string

    function asResponseError(...args: any[]): void

    function cause(c: any): any

    function toString(): any

    namespace cause {
      const prototype: {}
    }

    namespace toString {
      const prototype: {}
    }
  }
}

export namespace EmptyArgError {
  namespace prototype {
    const message: string

    const name: string

    function asResponseError(...args: any[]): void

    function cause(c: any): any

    function toString(): any

    namespace cause {
      const prototype: {}
    }

    namespace toString {
      const prototype: {}
    }
  }
}

export namespace EmptyArgumentError {
  namespace prototype {
    const message: string

    const name: string

    function asResponseError(...args: any[]): void

    function cause(c: any): any

    function toString(): any

    namespace cause {
      const prototype: {}
    }

    namespace toString {
      const prototype: {}
    }
  }
}

export namespace FileNotFoundError {
  namespace prototype {
    const message: string

    const name: string

    function asResponseError(...args: any[]): void

    function cause(c: any): any

    function toString(): any

    namespace cause {
      const prototype: {}
    }

    namespace toString {
      const prototype: {}
    }
  }
}

export namespace InternalServerError {
  namespace prototype {
    const message: string

    const name: string

    function asResponseError(...args: any[]): void

    function cause(c: any): any

    function toString(): any

    namespace cause {
      const prototype: {}
    }

    namespace toString {
      const prototype: {}
    }
  }
}

export namespace InvalidArgumentError {
  namespace prototype {
    const message: string

    const name: string

    function asResponseError(...args: any[]): void

    function cause(c: any): any

    function toString(): any

    namespace cause {
      const prototype: {}
    }

    namespace toString {
      const prototype: {}
    }
  }
}

export namespace MissingDependencyError {
  namespace prototype {
    const message: string

    const name: string

    function asResponseError(...args: any[]): void

    function cause(c: any): any

    function toString(): any

    namespace cause {
      const prototype: {}
    }

    namespace toString {
      const prototype: {}
    }
  }
}

export namespace MissingDeviceError {
  namespace prototype {
    const message: string

    const name: string

    function asResponseError(...args: any[]): void

    function cause(c: any): any

    function toString(): any

    namespace cause {
      const prototype: {}
    }

    namespace toString {
      const prototype: {}
    }
  }
}

export namespace NotAuthorizedError {
  namespace prototype {
    const message: string

    const name: string

    function asResponseError(...args: any[]): void

    function cause(c: any): any

    function toString(): any

    namespace cause {
      const prototype: {}
    }

    namespace toString {
      const prototype: {}
    }
  }
}

export namespace NotFoundError {
  namespace prototype {
    const message: string

    const name: string

    function asResponseError(...args: any[]): void

    function cause(c: any): any

    function toString(): any

    namespace cause {
      const prototype: {}
    }

    namespace toString {
      const prototype: {}
    }
  }
}

export namespace NotImplementedError {
  namespace prototype {
    const message: string

    const name: string

    function asResponseError(...args: any[]): void

    function cause(c: any): any

    function toString(): any

    namespace cause {
      const prototype: {}
    }

    namespace toString {
      const prototype: {}
    }
  }
}
